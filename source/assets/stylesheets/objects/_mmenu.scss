//	The size of the buttons
$btnSize: 40px;
$padding: 10px;
$fontSize: 14px;

//	Animations
$transitionDuration: 0.4s;
$transitionFunction: ease;

$subOffset: 40%;

//	Arrows
@mixin arrow
{
	content: '';
	border: 2px solid transparent;
	display: block;
	width: 7px;
	height: 7px;
	margin-bottom: -5px;
	position: absolute;
	bottom: 50%;
	
	@include vendor-prefix( "transform", rotate( -45deg ) );
}
@mixin arrow-prev
{
	border-right: none;
	border-bottom: none;
}
@mixin arrow-next
{
	border-top: none;
	border-left: none;
}

//	Variables
$defaultWidth		: 0.8;
$defaultMinWidth	: 140px;
$defaultMaxWidth	: 440px;

$defaultHeight		: 0.8;
$defaultMinHeight	: 140px;
$defaultMaxHeight	: 880px;

//	Sizing left
@mixin sizing( $cls: "",
	$width: $defaultWidth, $minWidth: $defaultMinWidth, $maxWidth: $defaultMaxWidth,
	$height: $defaultHeight, $minHeight: $defaultMinHeight, $maxHeight: $defaultMaxHeight
) {
	html.mm-opened.mm-opening#{$cls}
	{
		.mm-page,
		#mm-blocker,
		.mm-fixed-top,
		.mm-fixed-bottom
		{
			left: percentage( $width );
		}
	}
	.mm-menu#{$cls}
	{
		width: percentage( $width );
	}
	@media all and (max-width: $minWidth / $width ) {
		.mm-menu#{$cls}
		{
			width: $minWidth;
		}
		html.mm-opened.mm-opening#{$cls}
		{
			.mm-page,
			#mm-blocker,
			.mm-fixed-top,
			.mm-fixed-bottom
			{
				left: $minWidth;
			}
		}
	}
	@media all and (min-width: $maxWidth / $width ) {
		.mm-menu#{$cls}
		{
			width: $maxWidth;
		}
		html.mm-opened.mm-opening#{$cls}
		{
			.mm-page,
			#mm-blocker,
			.mm-fixed-top,
			.mm-fixed-bottom
			{
				left: $maxWidth;
			}
		}
	}
}

//	Sizing top/right/bottom
@mixin sizing_position( $cls: "",
	$width: $defaultWidth, $minWidth: $defaultMinWidth, $maxWidth: $defaultMaxWidth,
	$height: $defaultHeight, $minHeight: $defaultMinHeight, $maxHeight: $defaultMaxHeight
) {
	// top
	.mm-menu.mm-top#{$cls}
	{
		height: percentage( $height );
	}
	html.mm-top.mm-opened.mm-opening#{$cls}
	{
		.mm-page,
		#mm-blocker,
		.mm-fixed-top
		{
			top: percentage( $height );
		}
		.mm-fixed-bottom
		{
			bottom: -( percentage( $height ) );
		}
	}
	@media all and ( max-height: $minHeight / $height ) {
		.mm-menu.mm-top#{$cls}
		{
			height: $minHeight;
		}
		html.mm-top.mm-opened.mm-opening#{$cls}
		{
			.mm-page,
			#mm-blocker,
			.mm-fixed-top
			{
				top: $minHeight;
			}
			.mm-fixed-bottom
			{
				bottom: -$minHeight;
			}
		}
	}
	@media all and ( min-height: $maxHeight / $height ) {
		.mm-menu.mm-top#{$cls}
		{
			height: $maxHeight;
		}
		html.mm-top.mm-opened.mm-opening#{$cls}
		{
			.mm-page,
			#mm-blocker,
			.mm-fixed-top
			{
				top: $maxHeight;
			}
			.mm-fixed-bottom
			{
				bottom: -$maxHeight;
			}
		}
	}
	
	// right
	.mm-menu.mm-right#{$cls}
	{
		width: percentage( $width );
	}
	html.mm-right.mm-opened.mm-opening#{$cls}
	{
		.mm-page,
		#mm-blocker,
		.mm-fixed-top,
		.mm-fixed-bottom
		{
			right: percentage( $width );
		}
	}
	@media all and ( max-width: $minWidth / $width ) {
		.mm-menu.mm-right#{$cls}
		{
			width: $minWidth;
		}
		html.mm-right.mm-opened.mm-opening#{$cls}
		{
			.mm-page,
			#mm-blocker,
			.mm-fixed-top,
			.mm-fixed-bottom
			{
				right: $minWidth;
			}
		}
	}
	@media all and ( min-width: $maxWidth / $width ) {
		.mm-menu.mm-right#{$cls}
		{
			width: $maxWidth;
		}
		html.mm-right.mm-opened.mm-opening#{$cls}
		{
			.mm-page,
			#mm-blocker,
			.mm-fixed-top,
			.mm-fixed-bottom
			{
				right: $maxWidth;
			}
		}
	}
	
	// bottom
	.mm-menu.mm-bottom#{$cls}
	{
		height: percentage( $height );
	}
	html.mm-bottom.mm-opened.mm-opening#{$cls}
	{
		.mm-page,
		#mm-blocker,
		.mm-fixed-bottom
		{
			bottom: percentage( $height );
		}
		.mm-fixed-top
		{
			top: -( percentage( $height ) );
		}
	}
	@media all and ( max-height: $minHeight / $height ) {
		.mm-menu.mm-bottom#{$cls}
		{
			height: $minHeight;
		}
		html.mm-bottom.mm-opened.mm-opening#{$cls}
		{
			.mm-page,
			#mm-blocker,
			.mm-fixed-bottom
			{
				bottom: $minHeight;
			}
			.mm-fixed-top
			{
				top: -$minHeight;
			}
		}
	}
	@media all and ( min-height: $maxHeight / $height ) {
		.mm-menu.mm-bottom#{$cls}
		{
			height: $maxHeight;
		}
		html.mm-bottom.mm-opened.mm-opening#{$cls}
		{
			.mm-page,
			#mm-blocker,
			.mm-fixed-bottom
			{
				bottom: $maxHeight;
			}
			.mm-fixed-top
			{
				top: -$maxHeight;
			}
		}
	}
}

//	Sizing z-position
@mixin sizing_zposition( $cls: "",
	$width: $defaultWidth, $minWidth: $defaultMinWidth, $maxWidth: $defaultMaxWidth,
	$height: $defaultHeight, $minHeight: $defaultMinHeight, $maxHeight: $defaultMaxHeight
) {
	// left
	.mm-menu#{$cls}
	{
		&.mm-front,
		&.mm-next
		{
			left: -( percentage( $width ) );
		}
	}
	@media all and ( max-width: $minWidth / $width ) {
		.mm-menu#{$cls}
		{
			&.mm-front,
			&.mm-next
			{
				left: -$minWidth;
			}
		}
	}
	@media all and ( min-width: $maxWidth / $width ) {
		.mm-menu#{$cls}
		{
			&.mm-front,
			&.mm-next
			{
				left: -$maxWidth;
			}
		}
	}
	
	// top
	.mm-menu.mm-top#{$cls}
	{
		&.mm-front,
		&.mm-next
		{
			top: -( percentage( $height ) );
		}
	}
	@media all and ( max-height: $minHeight / $height ) {
		.mm-menu.mm-top#{$cls}
		{
			&.mm-front,
			&.mm-next
			{
				top: -$minHeight;
			}
		}
	}
	@media all and ( min-height: $maxHeight / $height ) {
		.mm-menu.mm-top#{$cls}
		{
			&.mm-front,
			&.mm-next
			{
				top: -$maxHeight;
			}
		}
	}
	
	// right
	.mm-menu.mm-right#{$cls}
	{
		&.mm-front,
		&.mm-next
		{
			right: -( percentage( $width ) );
		}
	}
	@media all and ( max-width: $minWidth / $width ) {
		.mm-menu.mm-right#{$cls}
		{
			&.mm-front,
			&.mm-next
			{
				right: -$minWidth;
			}
		}
	}
	@media all and ( min-width: $maxWidth / $width ) {
		.mm-menu.mm-right#{$cls}
		{
			&.mm-front,
			&.mm-next
			{
				right: -$maxWidth;
			}
		}
	}
	
	// bottom
	.mm-menu.mm-bottom#{$cls}
	{
		&.mm-front,
		&.mm-next
		{
			bottom: -( percentage( $height ) );
		}
	}
	@media all and ( max-height: $minHeight / $height ) {
		.mm-menu.mm-bottom#{$cls}
		{
			&.mm-front,
			&.mm-next
			{
				bottom: -$minHeight;
			}
		}
	}
	@media all and ( min-height: $maxHeight / $height ) {
		.mm-menu.mm-bottom#{$cls}
		{
			&.mm-front,
			&.mm-next
			{
				bottom: -$maxHeight;
			}
		}
	}


	//	Fixed elements
	html.mm-opened.mm-front,
	html.mm-opened.mm-opening.mm-front
	{
		.mm-fixed-top,
		.mm-fixed-bottom
		{
			left: 0;
			right: auto;
		}
		.mm-fixed-top
		{
			top: 0;
		}
		.mm-fixed-bottom
		{
			bottom: 0;
		}
	}
}

//	Colors
@mixin colors( $cls: "",
	$baseBg: #333, $pageShadow: 0 0 20px rgba( 0, 0, 0, 0.5 ),
	$text: rgba( 255, 255, 255, 0.6 ), $dimmedText: rgba( 255, 255, 255, 0.3 ),
	$emphasizedBg: rgba( 0, 0, 0, 0.1 ), $highlightedBg: rgba( 255, 255, 255, 0.05 ),
	$border: rgba( 0, 0, 0, 0.15 )
) {
	html.mm-opened#{$cls} .mm-page
	{
		box-shadow: $pageShadow;
	}
	.mm-ismenu#{$cls}
	{
		background: $baseBg;
	}
	.mm-menu#{$cls}
	{
		color: $text;

		.mm-list
		{
			> li:after
			{
				border-color: $border;
			}
			> li
			{
				> a
				{
					&.mm-subclose
					{
						background: $emphasizedBg;
						color: $dimmedText;
					}
					&.mm-subopen:after,
					&.mm-subclose:before
					{
						border-color: $dimmedText;
					}
					&.mm-subopen:before
					{
						border-color: $border;
					}
				}
			}
			> li.mm-selected
			{
				> a:not(.mm-subopen),
				> span
				{
					background: $emphasizedBg;
				}
			}

			li.mm-label
			{
				background: $highlightedBg;
			}
		}
		
		&.mm-vertical .mm-list
		{
			li.mm-opened
			{
				> a.mm-subopen,
				> ul
				{
					background: $highlightedBg;
				}
			}
		}
	}
}
@mixin colors_search( $cls: "",
	$inputBg: rgba( 255, 255, 255, 0.3 ), $inputText: rgba( 255, 255, 255, 0.6 ),
	$dimmedText: rgba( 255, 255, 255, 0.3 )
) {
	.mm-menu#{$cls}
	{
		.mm-search input
		{
			background: $inputBg;
			color: $inputText;
		}
		li.mm-noresults
		{
			color: $dimmedText;
		}
	}
}
@mixin colors_counters( $cls: "",
	$dimmedText: rgba( 255, 255, 255, 0.3 )
) {
	.mm-menu#{$cls} em.mm-counter
	{
		color: $dimmedText;
	}
}
@mixin colors_header( $cls: "",
	$dimmedText: rgba( 255, 255, 255, 0.3 ),
	$border: rgba( 0, 0, 0, 0.15 )
) {
	.mm-menu#{$cls}
	{
		.mm-header
		{
			border-color: $border;
			color: $dimmedText;

			a:before
			{
				border-color: $dimmedText;
			}
		}
	}
}

//	Font
@mixin font
{
	-webkit-text-size-adjust: none;
	font-family: Arial, Helvetica, sans-serif;
	font-size: $fontSize;
	text-shadow: none;
}
//	Borders
@mixin border( $border, $pseudo, $size, $pos1, $pos2 )
{
	&:#{$pseudo}
	{
		content: '';
		border-#{$border}-width: 1px;
		border-#{$border}-style: solid;
		display: block;
		#{$size}: 100%;
		position: absolute;
		#{$pos1}: 0;
		#{$pos2}: 0;
	}
}
@mixin border-top
{
	@include border( "top", ":before", "width", "top", "left" );
}
@mixin border-right
{
	@include border( "right", ":after", "height", "right", "top" );
}
@mixin border-bottom
{
	@include border( "bottom", ":after", "width", "bottom", "left" );
}
@mixin border-left
{
	@include border( "left", ":before", "height", "left", "top" );
}

//	Misc mixins
@mixin vendor-prefix( $prop, $val )
{
	-webkit-#{$prop}: $val;
	-moz-#{$prop}: $val;
	-ms-#{$prop}: $val;
	-o-#{$prop}: $val;
	#{$prop}: $val;
}
@mixin ellipsis
{	
	text-overflow: ellipsis;
	white-space: nowrap;
	overflow: hidden;
}

//	Animations
html.mm-opened
{
	.mm-page,
	#mm-blocker,
	.mm-fixed-top,
	.mm-fixed-bottom,
	.mm-menu.mm-horizontal > .mm-panel
	{
		@include vendor-prefix( "transition", none $transitionDuration $transitionFunction );

		// border is needed to force transitionend event even if no other value changed
		// transform is needed to force hardware acceleration
		-webkit-transition-property: top, right, bottom, left, border, -webkit-transform;
		-moz-transition-property: top, right, bottom, left, border, -moz-transform;
		-ms-transition-property: top, right, bottom, left, border, -ms-transform;
		-o-transition-property: top, right, bottom, left, border, -o-transform;
		transition-property: top, right, bottom, left, border, transform;
	}
	.mm-page,
	#mm-blocker
	{
		left: 0%;
		top: 0;
		margin: 0;
		border: 0px solid rgba( 0, 0, 0, 0 );
	}
	
	&.mm-opening
	{
		.mm-page,
		#mm-blocker
		{
			border: 0px solid rgba( 100, 100, 100, 0 );
		}
	}
}

//	Generic classes
.mm-menu .mm-hidden
{
	display: none;
}

//	Fixed elements
.mm-fixed-top,
.mm-fixed-bottom
{
	position: fixed;
	left: 0;
}
.mm-fixed-top
{
	top: 0;
}
.mm-fixed-bottom
{
	bottom: 0;
}


//	Menu, submenus, items
html.mm-opened .mm-page,
.mm-menu > .mm-panel
{
	@include vendor-prefix( "box-sizing", border-box );
}

// html/body
html.mm-opened,
html.mm-opened body
{
	width: 100%;
	height: 100%;
	overflow: hidden;
	position: relative;
}

// page + blocker
html.mm-opened .mm-page
{
	height: 100%;
	overflow: hidden;
	position: absolute;
}
html.mm-background .mm-page
{
	background: inherit;
}
#mm-blocker
{
	background: #fff;
	opacity: 0;
	display: none;
	width: 100%;
	height: 100%;
	position: absolute;
	z-index: 9999;
}
html.mm-opened #mm-blocker,
html.mm-blocking #mm-blocker
{
	display: block;
}

// menu
.mm-menu.mm-current
{
	display: block;
}
.mm-menu
{
	background: inherit;
	display: none;
	overflow: hidden;
	height: 100%;
	padding: 0;
	position: absolute;
	left: 0;
	top: 0;
	z-index: 0;
	
	> .mm-panel
	{
		background: inherit;
	
		-webkit-overflow-scrolling: touch;
		overflow: scroll;
		overflow-x: hidden;
		overflow-y: auto;
	
		width: 100%;
		height: 100%;
		padding: $padding * 2;
		position: absolute;
		top: 0;
		left: 100%;
		z-index: 0;
		
		&.mm-opened
		{
			left: 0%;
		}
		&.mm-subopened
		{
			left: -$subOffset;
		}
		&.mm-highest
		{
			z-index: 1;
		}
		&.mm-hidden
		{
			display: block;
			visibility: hidden;
		}
	}
}

//	Lists
.mm-menu
{
	.mm-list
	{
		padding: ( $btnSize / 2 ) 0;
	}
	> .mm-list
	{
		padding: ( $btnSize / 2 ) 0 $btnSize 0;
	}
}
.mm-panel > .mm-list
{
	margin-left: -( $padding * 2 );
	margin-right: -( $padding * 2 );
	
	&:first-child
	{
		padding-top: 0;
	}
}

.mm-list,
.mm-list > li
{
	list-style: none;
	display: block;
	padding: 0;
	margin: 0;
}
.mm-list
{
	*
	{
		@include font;
	}
	a,
	a:hover
	{
		text-decoration: none;
	}

	> li
	{
		position: relative;

		> a,
		> span
		{
			@include ellipsis;
			color: inherit;
			line-height: $btnSize - ( $padding * 2 );
			display: block;
			padding: $padding $padding $padding ( $padding * 2 );
			margin: 0;
		}
	}
	
	> li:not(.mm-subtitle):not(.mm-label):not(.mm-noresults)
	{
		@include border-bottom;
		&:after
		{
			width: auto;
			margin-left: ( $padding * 2 );
			position: relative;
			left: auto;
		}
	}

	// subopen/close
	a.mm-subopen
	{
		@include border-left;

		width: $btnSize;
		height: 100%;
		padding: 0;
		position: absolute;
		right: 0;
		top: 0;
		z-index: 2;
		
		&.mm-fullsubopen
		{
			width: 100%;
			
			&:before
			{
				border-left: none;
			}
		}

		+ a,
		+ span
		{
			padding-right: ( $padding / 2 );
			margin-right: $btnSize;
		}
	}

	> li.mm-selected
	{
		> a.mm-subopen
		{
			background: transparent;
		}
		> a.mm-fullsubopen
		{
			+ a,
			+ span
			{
				padding-right: $btnSize + ( $padding / 2 );
				margin-right: 0;
			}
		}
	}
	
	a.mm-subclose
	{
		text-indent: $btnSize - ( $padding * 2 );
		padding-top: ( $btnSize / 2 ) + $padding;
		margin-top: -( $btnSize / 2 );
	}

	// Labels
	> li.mm-label
	{
		font-size: 10px;
		text-transform: uppercase;
		text-indent: $padding * 2;
		line-height: 25px;
	}

	// Arrows
	a.mm-subopen:after,
	a.mm-subclose:before
	{
		@include arrow;
	}
	a.mm-subopen:after
	{
		@include arrow-next;
		right: 18px;
	}
	a.mm-subclose:before
	{
		@include arrow-prev;
		margin-bottom: -( $padding * 2 ) + 5;
		left: 22px;
	}
}

// vertical submenu
.mm-menu.mm-vertical .mm-list
{
	.mm-panel
	{
		display: none;
		padding: $padding 0 $padding $padding;
		
		li:last-child:after
		{
			border-color: transparent;
		}
	}
	li.mm-opened > .mm-panel
	{
		display: block;
	}
	> li.mm-opened > a.mm-subopen
	{
		height: $btnSize;
		&:after
		{
			@include vendor-prefix( "transform", rotate( 45deg ) );
			top: 16px;
			right: 16px;
		}
	}
}

@include colors();
@include sizing();



//	Bugfix for browsers without support for overflowscrolling
//		- Android < 3

html.mm-nooverflowscrolling.mm-opened
{
	height: auto;
	overflow: auto;
	overflow-x: hidden;
	overflow-y: scroll;

	body
	{
		overflow: auto;
	}
	.mm-page
	{
		min-height: 1000px;
		position: fixed;
	}
	.mm-menu
	{
		height: auto;
		min-height: 1000px;
		overflow: auto;
		overflow-x: hidden;
		position: relative;
		left: auto;
		top: auto;
	}
	> .mm-panel
	{
		position: relative;
		height: auto;
		display: none;
		left: 0;
		
		&.mm-current
		{
			display: block;
		}
	}
}